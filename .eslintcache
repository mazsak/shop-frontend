[{"F:\\Projects\\UCZELNIA\\shop\\shop-frontend\\src\\index.js":"1","F:\\Projects\\UCZELNIA\\shop\\shop-frontend\\src\\App.js":"2","F:\\Projects\\UCZELNIA\\shop\\shop-frontend\\src\\reportWebVitals.js":"3","F:\\Projects\\UCZELNIA\\shop\\shop-frontend\\src\\components\\Home.js":"4","F:\\Projects\\UCZELNIA\\shop\\shop-frontend\\src\\components\\Profile.js":"5","F:\\Projects\\UCZELNIA\\shop\\shop-frontend\\src\\components\\Error.js":"6","F:\\Projects\\UCZELNIA\\shop\\shop-frontend\\src\\components\\NavBar.js":"7","F:\\Projects\\UCZELNIA\\shop\\shop-frontend\\src\\requests\\directory.js":"8","F:\\Projects\\UCZELNIA\\shop\\shop-frontend\\src\\api\\API.js":"9","F:\\Projects\\UCZELNIA\\shop\\shop-frontend\\src\\components\\ItemProduct.js":"10","F:\\Projects\\UCZELNIA\\shop\\shop-frontend\\src\\components\\Pagination.js":"11","F:\\Projects\\UCZELNIA\\shop\\shop-frontend\\src\\requests\\product.js":"12","F:\\Projects\\UCZELNIA\\shop\\shop-frontend\\src\\components\\Product.js":"13","F:\\Projects\\UCZELNIA\\shop\\shop-frontend\\src\\components\\Cart.js":"14","F:\\Projects\\UCZELNIA\\shop\\shop-frontend\\src\\components\\Register.js":"15","F:\\Projects\\UCZELNIA\\shop\\shop-frontend\\src\\components\\Login.js":"16","F:\\Projects\\UCZELNIA\\shop\\shop-frontend\\src\\requests\\user.js":"17","F:\\Projects\\UCZELNIA\\shop\\shop-frontend\\src\\components\\Orders.js":"18"},{"size":761,"mtime":1610651052988,"results":"19","hashOfConfig":"20"},{"size":1029,"mtime":1610660119897,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"20"},{"size":6397,"mtime":1610484044482,"results":"23","hashOfConfig":"20"},{"size":285,"mtime":1610476569524,"results":"24","hashOfConfig":"20"},{"size":279,"mtime":1610473947739,"results":"25","hashOfConfig":"20"},{"size":1271,"mtime":1610659780804,"results":"26","hashOfConfig":"20"},{"size":236,"mtime":1610653984865,"results":"27","hashOfConfig":"20"},{"size":103,"mtime":1608668815113,"results":"28","hashOfConfig":"20"},{"size":687,"mtime":1610484393150,"results":"29","hashOfConfig":"20"},{"size":1695,"mtime":1610475535834,"results":"30","hashOfConfig":"20"},{"size":507,"mtime":1610653984865,"results":"31","hashOfConfig":"20"},{"size":3449,"mtime":1610661688274,"results":"32","hashOfConfig":"20"},{"size":3684,"mtime":1610659082956,"results":"33","hashOfConfig":"20"},{"size":4359,"mtime":1610659394499,"results":"34","hashOfConfig":"20"},{"size":2710,"mtime":1610659334987,"results":"35","hashOfConfig":"20"},{"size":858,"mtime":1610660169619,"results":"36","hashOfConfig":"20"},{"size":4188,"mtime":1610660938659,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ctwcct",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\Projects\\UCZELNIA\\shop\\shop-frontend\\src\\index.js",[],"F:\\Projects\\UCZELNIA\\shop\\shop-frontend\\src\\App.js",[],"F:\\Projects\\UCZELNIA\\shop\\shop-frontend\\src\\reportWebVitals.js",[],["76","77"],"F:\\Projects\\UCZELNIA\\shop\\shop-frontend\\src\\components\\Home.js",["78"],"import React, { useState, useEffect } from 'react';\r\nimport NavBar from './NavBar';\r\nimport ItemProduct from './ItemProduct';\r\nimport { GetAllDirectory } from './../requests/directory';\r\nimport { GetProducts } from './../requests/product';\r\nimport { viewPagination } from './Pagination';\r\nimport {\r\n    Accordion,\r\n    Card,\r\n    Spinner,\r\n    Button,\r\n    Pagination\r\n} from 'react-bootstrap';\r\n\r\nconst Home = (props) => {\r\n    const [directories, setDirectories] = useState([]);\r\n    const [products, setProducts] = useState([]);\r\n    const [isLoadingDirectiories, setIsLoadingDirectiories] = useState(true);\r\n    const [isLoadingProducts, setIsLoadingProducts] = useState(true);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [totalPage, setTotalPage] = useState(1);\r\n    const [currentDirectory, setCurrentDirectory] = useState('');\r\n    const [currentSubdirectory, setCurrentSubdirectory] = useState('');\r\n\r\n\r\n    const loadProducts = async (directory, subdirectory, pageNumber) => {\r\n        setIsLoadingProducts(true);\r\n\r\n        const resultProduct = await GetProducts(directory, subdirectory, pageNumber);\r\n\r\n        setProducts(resultProduct.products);\r\n        setCurrentPage(resultProduct.currentPage);\r\n        setTotalPage(resultProduct.totalPages);\r\n\r\n        setIsLoadingProducts(false);\r\n    };\r\n\r\n    const fetchData = async () => {\r\n        setIsLoadingDirectiories(true);\r\n\r\n        const resultDirectory = await GetAllDirectory();\r\n        setDirectories(resultDirectory);\r\n        setCurrentDirectory(resultDirectory[0].name)\r\n\r\n        setIsLoadingDirectiories(false);\r\n\r\n        loadProducts(resultDirectory[0].name, '', currentPage)\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <nav>\r\n                <NavBar />\r\n            </nav>\r\n            <div className='row' style={{ width: '95%', marginLeft: 'auto', marginRight: 'auto' }}>\r\n                <div className='col-2' style={{ padding: '20px', minWidth: '300px' }}>\r\n                    {isLoadingDirectiories && directories.length === 0 ? (\r\n                        <Card bg='dark' text='white' style={{ padding: '10px', display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\r\n                            <Spinner animation=\"grow\" variant=\"light\" />\r\n                        </Card>\r\n                    ) : (\r\n                            <Accordion >\r\n                                {directories.map((item, index) =>\r\n                                    <Card bg='dark' text='white'>\r\n                                        <Accordion.Toggle as={Button} variant=\"link\" onClick={ async () => {\r\n                                            setCurrentDirectory(item.name);\r\n                                            setCurrentSubdirectory('')\r\n                                            setCurrentPage(1);\r\n                                            loadProducts(item.name, '',1);\r\n                                        }} eventKey={item.id}>{item.name}</Accordion.Toggle>\r\n                                        <Accordion.Collapse eventKey={item.id} key={item.id}>\r\n                                            <Card.Body>\r\n                                                {item.subdirectories.map((subdirectory) =>\r\n                                                    <div className='row' style={{ paddingLeft: '20px' }}>\r\n                                                        <a href={'#' + subdirectory.name} onClick={async () => {\r\n                                            setCurrentSubdirectory(subdirectory.name);\r\n                                            setCurrentPage(1);\r\n                                            loadProducts(currentDirectory, subdirectory.name, 1);\r\n                                        }}>{subdirectory.name}</a>\r\n                                                    </div>\r\n                                                )}\r\n                                            </Card.Body>\r\n                                        </Accordion.Collapse>\r\n                                    </Card>\r\n                                )}\r\n                            </Accordion>\r\n                        )}\r\n                </div>\r\n                <div className='col' style={{ padding: '20px' }}>\r\n                    <Card bg='dark' text='white' style={{ padding: '10px' }}>\r\n                        <h3>Products from: {currentDirectory}{currentSubdirectory !== '' ? ', ' + currentSubdirectory : ''}</h3>\r\n                    </Card>\r\n                    {isLoadingProducts && products.length === 0 ? (\r\n                        <Card bg='dark' text='white' style={{ padding: '10px', display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\r\n                            <Spinner animation=\"grow\" variant=\"light\" />\r\n                        </Card>\r\n                    ) :\r\n                        (\r\n\r\n                            <div>\r\n                                <Card bg='dark' text='white' style={{ padding: '10px', display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\r\n                                    <Pagination onClick={(e) => {\r\n                                        loadProducts(currentDirectory, currentSubdirectory, Number(e.target.id))\r\n                                    }}>\r\n                                        {viewPagination(totalPage, currentPage)}\r\n                                    </Pagination>\r\n                                </Card>\r\n                                {products.map((product) =>\r\n                                    <ItemProduct item={product} />\r\n                                )}\r\n                                <Card bg='dark' text='white' style={{ padding: '10px', display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\r\n                                    <Pagination onClick={(e) => {\r\n                                        loadProducts(currentDirectory, currentSubdirectory, Number(e.target.id))\r\n                                    }}>\r\n                                        {viewPagination(totalPage, currentPage)}\r\n                                    </Pagination>\r\n                                </Card>\r\n                            </div>\r\n                        )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","F:\\Projects\\UCZELNIA\\shop\\shop-frontend\\src\\components\\Profile.js",[],"F:\\Projects\\UCZELNIA\\shop\\shop-frontend\\src\\components\\Error.js",[],"F:\\Projects\\UCZELNIA\\shop\\shop-frontend\\src\\components\\NavBar.js",[],"F:\\Projects\\UCZELNIA\\shop\\shop-frontend\\src\\requests\\directory.js",[],"F:\\Projects\\UCZELNIA\\shop\\shop-frontend\\src\\api\\API.js",[],"F:\\Projects\\UCZELNIA\\shop\\shop-frontend\\src\\components\\ItemProduct.js",[],"F:\\Projects\\UCZELNIA\\shop\\shop-frontend\\src\\components\\Pagination.js",[],"F:\\Projects\\UCZELNIA\\shop\\shop-frontend\\src\\requests\\product.js",[],"F:\\Projects\\UCZELNIA\\shop\\shop-frontend\\src\\components\\Product.js",["79"],"F:\\Projects\\UCZELNIA\\shop\\shop-frontend\\src\\components\\Cart.js",["80"],"F:\\Projects\\UCZELNIA\\shop\\shop-frontend\\src\\components\\Register.js",[],"F:\\Projects\\UCZELNIA\\shop\\shop-frontend\\src\\components\\Login.js",[],"F:\\Projects\\UCZELNIA\\shop\\shop-frontend\\src\\requests\\user.js",[],"F:\\Projects\\UCZELNIA\\shop\\shop-frontend\\src\\components\\Orders.js",[],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":52,"column":8,"nodeType":"87","endLine":52,"endColumn":10,"suggestions":"88"},{"ruleId":"85","severity":1,"message":"86","line":29,"column":8,"nodeType":"87","endLine":29,"endColumn":10,"suggestions":"89"},{"ruleId":"90","severity":1,"message":"91","line":15,"column":22,"nodeType":"92","messageId":"93","endLine":15,"endColumn":33},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["96"],["97"],"no-unused-vars","'setProducts' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"98","fix":"99"},{"desc":"98","fix":"100"},"Update the dependencies array to be: [fetchData]",{"range":"101","text":"102"},{"range":"103","text":"102"},[1741,1743],"[fetchData]",[700,702]]